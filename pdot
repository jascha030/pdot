#!/usr/bin/env php
<?php

declare(strict_types=1);

use Symfony\Component\Console\Output\ConsoleOutput;
use function Jascha030\Dotfiles\app;

error_reporting(E_ALL & ~E_DEPRECATED & ~E_USER_DEPRECATED);

set_error_handler(static function ($severity, $message, $file, $line): void {
    if ($severity & error_reporting()) {
        /** @noinspection PhpUnhandledExceptionInspection */
        throw new ErrorException($message, 0, $severity, $file, $line);
    }
});

try {
    require_once(static function (): ?string {
        if (defined('HHVM_VERSION_ID')) {
            fwrite(STDERR, "HHVM is not supported.\n") && exit(1);
        }
        if (! defined('PHP_VERSION_ID') || PHP_VERSION_ID < 80000) {
            fwrite(STDERR, sprintf("PHP version: %s is not supported, please update to 8.0 or higher.\n", PHP_VERSION));
        }
        if (PHP_VERSION_ID >= 80200) {
            fwrite(STDERR, sprintf("PHP version: %s is not supported, please downgrade to 8.1.* or 8.0.*.\n", PHP_VERSION));
        }

        foreach (new ArrayIterator(['/vendor/autoload.php', '/autoload.php']) as $path) {
            if (file_exists($path = sprintf('%s%s', dirname(__DIR__), $path))) {
                return $path;
            }
        }

        return null;
    })() ?? throw new RuntimeException('Unable to resolve autoload.php');

    exit(app(new ConsoleOutput())->run());
} catch (Exception $exception) {
    fwrite(STDERR, $exception->getMessage());

    exit(1);
}
